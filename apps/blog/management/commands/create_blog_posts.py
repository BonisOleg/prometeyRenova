from django.core.management.base import BaseCommand
from django.utils import timezone
from apps.blog.models import BlogPost


class Command(BaseCommand):
    help = 'Створює початкові статті для блогу'

    def handle(self, *args, **options):
        articles_data = [
            {
                'title': 'Розробка сайтів під ключ: Повний гід для бізнесу',
                'excerpt': 'Дізнайтеся все про створення сайтів під ключ: від планування до запуску. Експертні поради та практичні кроки для успішного проекту.',
                'content': '''
<h2>Що таке розробка сайтів під ключ?</h2>
<p>Розробка сайтів під ключ - це комплексний підхід до створення веб-сайтів, який включає всі етапи від аналізу потреб до запуску та підтримки. Це рішення, яке дозволяє бізнесу отримати готовий продукт без необхідності залучення додаткових спеціалістів.</p>

<h2>Основні етапи розробки сайту під ключ</h2>
<h3>1. Аналіз та планування</h3>
<p>Перший крок - це детальний аналіз потреб бізнесу, цільової аудиторії та конкурентів. На цьому етапі формується технічне завдання та архітектура сайту.</p>

<h3>2. Дизайн та UX/UI</h3>
<p>Створення сучасного дизайну, який відповідає бренду та забезпечує зручність користування. Важливо врахувати всі деталі для різних пристроїв.</p>

<h3>3. Розробка та програмування</h3>
<p>Технічна реалізація сайту з використанням сучасних технологій. Включає створення адміністративної панелі та інтеграцію з зовнішніми сервісами.</p>

<h3>4. Тестування та запуск</h3>
<p>Комплексне тестування функціональності, швидкості та безпеки. Після успішного тестування сайт запускається в продакшн.</p>

<h2>Переваги розробки під ключ</h2>
<ul>
<li><strong>Економія часу</strong> - не потрібно шукати окремих спеціалістів</li>
<li><strong>Якість результату</strong> - весь проект контролюється однією командою</li>
<li><strong>Швидкість реалізації</strong> - оптимізований процес розробки</li>
<li><strong>Підтримка</strong> - постійна технічна підтримка та оновлення</li>
</ul>

<h2>Скільки коштує розробка сайту під ключ?</h2>
<p>Вартість розробки залежить від складності проекту та необхідного функціоналу:</p>
<ul>
<li><strong>Лендінг-сторінка</strong>: від 15,000 грн</li>
<li><strong>Корпоративний сайт</strong>: від 25,000 грн</li>
<li><strong>Інтернет-магазин</strong>: від 35,000 грн</li>
<li><strong>Портал або платформа</strong>: від 50,000 грн</li>
</ul>

<h2>Як вибрати розробника?</h2>
<p>При виборі команди розробників звертайте увагу на:</p>
<ul>
<li>Портфоліо та досвід роботи</li>
<li>Відгуки клієнтів</li>
<li>Технічну експертизу</li>
<li>Підхід до комунікації</li>
<li>Гарантії та підтримку</li>
</ul>

<h2>Висновок</h2>
<p>Розробка сайтів під ключ - це інвестиція в цифрове майбутнє вашого бізнесу. Правильний підхід до вибору команди та планування проекту забезпечить успішний результат та довгострокову ефективність.</p>
''',
                'seo_title': 'Розробка сайтів під ключ - Повний гід 2024',
                'seo_description': 'Дізнайтеся все про створення сайтів під ключ: етапи, вартість, вибір розробника. Експертні поради для бізнесу.',
                'keywords': 'розробка сайтів під ключ, створення сайтів, вартість розробки сайту, розробка сайтів недорого, веб-розробка, створення сайту під ключ',
                'category': 'web-development',
                'reading_time': 8
            },
            {
                'title': 'Курси програмування Python: Шлях від новачка до розробника',
                'excerpt': 'Покроковий план навчання Python програмуванню. Від основ до Django та веб-розробки. Практичні поради та ресурси для ефективного навчання.',
                'content': '''
<h2>Чому варто вивчати Python?</h2>
<p>Python - це один з найпопулярніших мов програмування у світі. Його простота, читабельність та величезна кількість бібліотек роблять його ідеальним вибором для початківців та досвідчених розробників.</p>

<h2>План навчання Python</h2>
<h3>1. Основи програмування (2-3 місяці)</h3>
<p>Почати варто з базових концепцій:</p>
<ul>
<li>Змінні та типи даних</li>
<li>Умовні конструкції та цикли</li>
<li>Функції та модулі</li>
<li>Робота з файлами</li>
<li>Обробка помилок</li>
</ul>

<h3>2. Об'єктно-орієнтоване програмування (1-2 місяці)</h3>
<p>Освоєння ООП концепцій:</p>
<ul>
<li>Класи та об'єкти</li>
<li>Наслідування та поліморфізм</li>
<li>Інкапсуляція та абстракція</li>
</ul>

<h3>3. Веб-розробка з Django (2-3 місяці)</h3>
<p>Створення веб-додатків:</p>
<ul>
<li>Основи Django фреймворку</li>
<li>Моделі та бази даних</li>
<li>Views та шаблони</li>
<li>Форми та аутентифікація</li>
<li>API розробка</li>
</ul>

<h2>Найкращі ресурси для навчання</h2>
<h3>Безкоштовні ресурси</h3>
<ul>
<li><strong>Python.org</strong> - офіційна документація</li>
<li><strong>W3Schools</strong> - інтерактивні уроки</li>
<li><strong>YouTube канали</strong> - відеоуроки українською</li>
<li><strong>GitHub</strong> - практичні проекти</li>
</ul>

<h3>Платні курси</h3>
<ul>
<li><strong>Udemy</strong> - курси від експертів</li>
<li><strong>Coursera</strong> - університетські програми</li>
<li><strong>Codecademy</strong> - інтерактивне навчання</li>
</ul>

<h2>Практичні проекти для портфоліо</h2>
<p>Створіть ці проекти для демонстрації навичок:</p>
<ol>
<li><strong>Калькулятор</strong> - базові операції та GUI</li>
<li><strong>То-до список</strong> - робота з даними та файлами</li>
<li><strong>Веб-сайт</strong> - Django проект з базою даних</li>
<li><strong>Telegram бот</strong> - API інтеграція</li>
<li><strong>Аналіз даних</strong> - pandas та matplotlib</li>
</ol>

<h2>Скільки часу потрібно для навчання?</h2>
<p>При регулярному навчанні 2-3 години на день:</p>
<ul>
<li><strong>Базовий рівень</strong>: 3-4 місяці</li>
<li><strong>Середній рівень</strong>: 6-8 місяців</li>
<li><strong>Продвинутий рівень</strong>: 1-1.5 року</li>
</ul>

<h2>Поради для ефективного навчання</h2>
<ul>
<li><strong>Практикуйтеся щодня</strong> - навіть 30 хвилин</li>
<li><strong>Створюйте проекти</strong> - застосовуйте знання на практиці</li>
<li><strong>Приєднуйтесь до спільнот</strong> - обмінюйтесь досвідом</li>
<li><strong>Читайте код інших</strong> - вивчайте найкращі практики</li>
<li><strong>Не бійтеся помилок</strong> - це частина навчального процесу</li>
</ul>

<h2>Кар'єрні можливості</h2>
<p>Після освоєння Python ви зможете працювати як:</p>
<ul>
<li><strong>Backend розробник</strong> - створення серверної частини</li>
<li><strong>Data Scientist</strong> - аналіз та обробка даних</li>
<li><strong>DevOps інженер</strong> - автоматизація процесів</li>
<li><strong>QA інженер</strong> - автоматизоване тестування</li>
<li><strong>Full-stack розробник</strong> - повний цикл розробки</li>
</ul>

<h2>Висновок</h2>
<p>Навчання Python - це інвестиція в ваше майбутнє. При правильному підході та регулярній практиці ви зможете освоїти цю мову та знайти роботу в IT сфері. Головне - почати та не зупинятися на досягнутому.</p>
''',
                'seo_title': 'Курси програмування Python - Навчання з нуля 2024',
                'seo_description': 'Покроковий план навчання Python програмуванню. Від основ до Django. Практичні поради та ресурси для ефективного навчання.',
                'keywords': 'курси програмування python, навчання python, python для початківців, django навчання, веб-розробка python, програмування з нуля',
                'category': 'courses',
                'reading_time': 10
            },
            {
                'title': 'Telegram боти для бізнесу: Автоматизація та збільшення продажів',
                'excerpt': 'Як створити Telegram бота для бізнесу. Приклади успішних ботів, технології розробки та практичні поради по автоматизації процесів.',
                'content': '''
<h2>Що таке Telegram боти та чому вони потрібні бізнесу?</h2>
<p>Telegram боти - це автоматизовані програми, які можуть виконувати різноманітні функції: від відповідей на запитання клієнтів до обробки замовлень та проведення платежів. Вони працюють 24/7 та можуть обслуговувати необмежену кількість користувачів одночасно.</p>

<h2>Основні переваги Telegram ботів для бізнесу</h2>
<ul>
<li><strong>Автоматизація</strong> - зменшення ручної роботи</li>
<li><strong>Швидкість</strong> - миттєві відповіді клієнтам</li>
<li><strong>Масштабованість</strong> - обслуговування тисяч користувачів</li>
<li><strong>Економія</strong> - зниження витрат на персонал</li>
<li><strong>Аналітика</strong> - детальна статистика взаємодії</li>
</ul>

<h2>Типи ботів для різних сфер бізнесу</h2>
<h3>1. Боти для обслуговування клієнтів</h3>
<p>Автоматичні відповіді на поширені запитання, інформація про послуги та ціни, запис на консультацію.</p>

<h3>2. Боти для продажів</h3>
<p>Каталог товарів, оформлення замовлень, прийом платежів, відстеження статусу доставки.</p>

<h3>3. Боти для навчання</h3>
<p>Розсилка навчальних матеріалів, проведення тестів, відстеження прогресу студентів.</p>

<h3>4. Боти для маркетингу</h3>
<p>Розсилка акцій та пропозицій, проведення конкурсів, збір бази клієнтів.</p>

<h2>Технології розробки Telegram ботів</h2>
<h3>Python + python-telegram-bot</h3>
<p>Найпопулярніша технологія для створення ботів:</p>
<ul>
<li>Простота навчання та використання</li>
<li>Велика кількість бібліотек</li>
<li>Гнучкість налаштування</li>
<li>Хороша документація</li>
</ul>

<h3>Node.js + Telegraf</h3>
<p>Сучасний підхід для швидкої розробки:</p>
<ul>
<li>Асинхронна обробка запитів</li>
<li>Велика екосистема npm пакетів</li>
<li>Висока продуктивність</li>
<li>Легка масштабованість</li>
</ul>

<h2>Приклади успішних ботів</h2>
<h3>Бот для інтернет-магазину</h3>
<p>Функціонал:</p>
<ul>
<li>Пошук товарів за назвою або категорією</li>
<li>Перегляд детальної інформації про товар</li>
<li>Додавання в кошик та оформлення замовлення</li>
<li>Відстеження статусу замовлення</li>
<li>Історія покупок</li>
</ul>

<h3>Бот для консультацій</h3>
<p>Можливості:</p>
<ul>
<li>Запис на консультацію з вибором часу</li>
<li>Оплата послуг через бота</li>
<li>Нагадування про зустріч</li>
<li>Онлайн-консультація через відео</li>
<li>Збереження результатів консультації</li>
</ul>

<h2>Скільки коштує розробка Telegram бота?</h2>
<p>Вартість залежить від складності функціоналу:</p>
<ul>
<li><strong>Простий бот</strong> (базові команди): 5,000-15,000 грн</li>
<li><strong>Середній бот</strong> (інтеграція з БД): 15,000-30,000 грн</li>
<li><strong>Складний бот</strong> (API, платежі): 30,000-60,000 грн</li>
<li><strong>Корпоративний бот</strong> (інтеграція з CRM): від 60,000 грн</li>
</ul>

<h2>Етапи розробки бота</h2>
<ol>
<li><strong>Аналіз потреб</strong> - визначення функціоналу</li>
<li><strong>Технічне завдання</strong> - детальний план розробки</li>
<li><strong>Проектування архітектури</strong> - структура бота</li>
<li><strong>Розробка</strong> - написання коду</li>
<li><strong>Тестування</strong> - перевірка функціональності</li>
<li><strong>Запуск</strong> - публікація в Telegram</li>
<li><strong>Підтримка</strong> - оновлення та розширення</li>
</ol>

<h2>Поради по створенню успішного бота</h2>
<ul>
<li><strong>Зробіть бота простим</strong> - користувачі не люблять складні інтерфейси</li>
<li><strong>Додайте особистість</strong> - використовуйте емодзі та дружній тон</li>
<li><strong>Тестуйте на реальних користувачах</strong> - збирайте зворотній зв'язок</li>
<li><strong>Поступово розширюйте функціонал</strong> - не перевантажуйте бота одразу</li>
<li><strong>Аналізуйте статистику</strong> - відстежуйте популярні функції</li>
</ul>

<h2>Висновок</h2>
<p>Telegram боти - це потужний інструмент для автоматизації бізнесу та покращення обслуговування клієнтів. При правильному плануванні та реалізації вони можуть значно збільшити ефективність вашого бізнесу та забезпечити конкурентну перевагу.</p>
''',
                'seo_title': 'Telegram боти для бізнесу - Автоматизація 2024',
                'seo_description': 'Як створити Telegram бота для бізнесу. Приклади, технології розробки та практичні поради по автоматизації процесів.',
                'keywords': 'telegram боти, створення ботів, боти для бізнесу, автоматизація telegram, розробка ботів, python telegram bot',
                'category': 'telegram-bots',
                'reading_time': 12
            }
        ]

        created_count = 0
        for article_data in articles_data:
            # Перевіряємо чи існує стаття з таким slug
            slug = article_data['title'].lower().replace(' ', '-').replace(':', '').replace(',', '').replace('(', '').replace(')', '')
            if not BlogPost.objects.filter(slug=slug).exists():
                post = BlogPost.objects.create(
                    title=article_data['title'],
                    slug=slug,
                    excerpt=article_data['excerpt'],
                    content=article_data['content'],
                    seo_title=article_data['seo_title'],
                    seo_description=article_data['seo_description'],
                    keywords=article_data['keywords'],
                    category=article_data['category'],
                    reading_time=article_data['reading_time'],
                    is_published=True
                )
                created_count += 1
                self.stdout.write(
                    self.style.SUCCESS(f'Створено статтю: {post.title}')
                )
            else:
                self.stdout.write(
                    self.style.WARNING(f'Стаття вже існує: {article_data["title"]}')
                )

        self.stdout.write(
            self.style.SUCCESS(f'Успішно створено {created_count} нових статей')
        )
